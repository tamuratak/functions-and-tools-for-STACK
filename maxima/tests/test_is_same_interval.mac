load("myassert.mac");
load("../is_same_interval.mac");


test_assert(is( {2, 3, 10} = setify(edges((x<2 and x<3) or x > 10))));

cond0 : x > 1 and x < 3$
test_assert(is( [0, 1, 0] = xs_in_interval([1, 2, 3], cond0) ));
test_assert(is( [1] = xs_in_interval([2.5], cond0) ));
test_assert(not is_same_interval(x < 3,  3 > x or 4 > x) );
test_assert(not is_same_interval(x < 3,  3 >= x) );
test_assert( is_same_interval(x < 3,  3 > x) );
test_assert( is_same_interval(x < -3,  -3 > x) );
test_assert(not is_same_interval(x < -3,  -4 > x) );
test_assert(not is_same_interval(x > -3,   x < 3) );
test_assert(not is_same_interval(x > 0,   x < 0) );
test_assert( is_same_interval(x > 0,   0 < x ) );

test_assert( is_same_interval( 1 <= x and x <= 2, (1 <= x and x <= 1/2) or (1/2 <= x and x <= 2) ) );
test_assert( is_same_interval( 1 <= x and x <= 2, (1 <= x and x <= 2/3) or (1/3 <= x and x <= 2) ) );

test_assert( not is_same_interval( 1 <=x, x <= x^2 and x >0) );
test_assert( not is_same_interval( -1 <= x and x <= 1, x^2 <= x) );
test_assert( is_same_interval( 2^2 <= x, 4 <= x) );
test_assert( not is_same_interval( x > 1 or x < -1, x^2 > 1) );
